LEARNINGS

Porblem:
    Typescript can't infer the type of populated documents
    for example:
        const messages = await Message.find({}).populate("sender", "name avatar").populate("chat", "groupChat");

    From above example, ts can't infer the type of name, avatar, groupChat.

SOLUTION:
    Mistake was in interface creation
    Correct format is:
    
        interface MessageDocument extends Document {
            content: string;
            sender: PopulatedDoc<UserDocument> 
            attachment: Attachment[]; // Define attachment as an array of Attachment objects
            chat: PopulatedDoc<ChatDocument>;
            createdAt: Date,
        }
    
    in above sender: instead of PopulatedDoc I was using Types.ObjectId; this was reason of error.








            avatar: members.slice(0, 3).map((member) => member.avatar?.url),

            members: members.map(({ _id, name, avatar }) => ({
                _id,
                name,
                avatar: avatar.url
            })),
            creator: {
                name: creator?.name || "None",
                avatar: creator.avatar?.url || ""
            },




